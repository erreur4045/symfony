(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["addpictures"],{

/***/ "./assets/js/addpictures.js":
/*!**********************************!*\
  !*** ./assets/js/addpictures.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");

var $collectionPictures;
var $addPictureButton = $('<button type="button" class="btn btn-outline-success add_tag_link">Ajouter une image</button>');
var $newLinkPictureLi = $('<li></li>').append($addPictureButton);
$(document).ready(function () {
  // Get the ul that holds the collection of tags
  $collectionPictures = $('ul.images_tricks'); // add the "add a tag" anchor and li to the tags ul

  $collectionPictures.find('li').each(function () {
    addPictureFormDeleteLink($(this));
  });
  $collectionPictures.append($newLinkPictureLi); // count the current form inputs we have (e.g. 2), use that as the new
  // index when inserting a new item (e.g. 2)

  $collectionPictures.data('index', $collectionPictures.find(':input').length);
  $addPictureButton.on('click', function (e) {
    // add a new tag form (see next code block)
    addPictureForm($collectionPictures, $newLinkPictureLi);
  });
});

function addPictureForm($collectionHolder, $newLinkLi) {
  // Get the data-prototype explained earlier
  var prototype = $collectionHolder.data('prototype'); // get the new index

  var index = $collectionHolder.data('index');
  var newForm = prototype; // You need this only if you didn't set 'label' => false in your tags field in TaskType
  // Replace '__name__label__' in the prototype's HTML to
  // instead be a number based on how many items we have
  // newForm = newForm.replace(/__name__label__/g, index);
  // Replace '__name__' in the prototype's HTML to
  // instead be a number based on how many items we have

  newForm = newForm.replace(/__name__/g, index); // increase the index with one for the next item

  $collectionHolder.data('index', index + 1); // Display the form in the page in an li, before the "Add a tag" link li

  var $newFormLi = $('<li></li>').append(newForm);
  $newLinkLi.before($newFormLi);
  addPictureFormDeleteLink($newFormLi);
}

function addPictureFormDeleteLink($tagFormLi) {
  var $removeFormButton = $('<button type="button" class="btn btn-danger" style="margin-bottom: 5px">Supprimer cet élément</button>');
  $tagFormLi.append($removeFormButton);
  $removeFormButton.on('click', function (e) {
    // remove the li for the tag form
    $tagFormLi.remove();
  });
}

$(function () {
  $(document).delegate('.custom-file-input', 'change', function () {
    var inputFile = $(event.currentTarget);
    var labelToShow = $(inputFile[0].activeElement.labels[1]);
    $(inputFile).find(labelToShow).html(inputFile[0].activeElement.files[0].name);
  });
});

/***/ })

},[["./assets/js/addpictures.js","runtime","vendors~addpictures~addvideos~app~carrousel~checkbox~deletecheckbox~loadmorecoms~loadmoretricks"]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hc3NldHMvanMvYWRkcGljdHVyZXMuanMiXSwibmFtZXMiOlsiJCIsInJlcXVpcmUiLCIkY29sbGVjdGlvblBpY3R1cmVzIiwiJGFkZFBpY3R1cmVCdXR0b24iLCIkbmV3TGlua1BpY3R1cmVMaSIsImFwcGVuZCIsImRvY3VtZW50IiwicmVhZHkiLCJmaW5kIiwiZWFjaCIsImFkZFBpY3R1cmVGb3JtRGVsZXRlTGluayIsImRhdGEiLCJsZW5ndGgiLCJvbiIsImUiLCJhZGRQaWN0dXJlRm9ybSIsIiRjb2xsZWN0aW9uSG9sZGVyIiwiJG5ld0xpbmtMaSIsInByb3RvdHlwZSIsImluZGV4IiwibmV3Rm9ybSIsInJlcGxhY2UiLCIkbmV3Rm9ybUxpIiwiYmVmb3JlIiwiJHRhZ0Zvcm1MaSIsIiRyZW1vdmVGb3JtQnV0dG9uIiwicmVtb3ZlIiwiZGVsZWdhdGUiLCJpbnB1dEZpbGUiLCJldmVudCIsImN1cnJlbnRUYXJnZXQiLCJsYWJlbFRvU2hvdyIsImFjdGl2ZUVsZW1lbnQiLCJsYWJlbHMiLCJodG1sIiwiZmlsZXMiLCJuYW1lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxJQUFNQSxDQUFDLEdBQUdDLG1CQUFPLENBQUMsb0RBQUQsQ0FBakI7O0FBRUEsSUFBSUMsbUJBQUo7QUFDQSxJQUFJQyxpQkFBaUIsR0FBR0gsQ0FBQyxDQUFDLCtGQUFELENBQXpCO0FBQ0EsSUFBSUksaUJBQWlCLEdBQUdKLENBQUMsQ0FBQyxXQUFELENBQUQsQ0FBZUssTUFBZixDQUFzQkYsaUJBQXRCLENBQXhCO0FBRUFILENBQUMsQ0FBQ00sUUFBRCxDQUFELENBQVlDLEtBQVosQ0FBa0IsWUFBVztBQUN6QjtBQUNBTCxxQkFBbUIsR0FBR0YsQ0FBQyxDQUFDLGtCQUFELENBQXZCLENBRnlCLENBR3pCOztBQUNBRSxxQkFBbUIsQ0FBQ00sSUFBcEIsQ0FBeUIsSUFBekIsRUFBK0JDLElBQS9CLENBQW9DLFlBQVc7QUFDM0NDLDRCQUF3QixDQUFDVixDQUFDLENBQUMsSUFBRCxDQUFGLENBQXhCO0FBQ0gsR0FGRDtBQUdBRSxxQkFBbUIsQ0FBQ0csTUFBcEIsQ0FBMkJELGlCQUEzQixFQVB5QixDQVF6QjtBQUNBOztBQUNBRixxQkFBbUIsQ0FBQ1MsSUFBcEIsQ0FBeUIsT0FBekIsRUFBa0NULG1CQUFtQixDQUFDTSxJQUFwQixDQUF5QixRQUF6QixFQUFtQ0ksTUFBckU7QUFFQVQsbUJBQWlCLENBQUNVLEVBQWxCLENBQXFCLE9BQXJCLEVBQThCLFVBQVNDLENBQVQsRUFBWTtBQUN0QztBQUNBQyxrQkFBYyxDQUFDYixtQkFBRCxFQUFzQkUsaUJBQXRCLENBQWQ7QUFDSCxHQUhEO0FBSUgsQ0FoQkQ7O0FBa0JBLFNBQVNXLGNBQVQsQ0FBd0JDLGlCQUF4QixFQUEyQ0MsVUFBM0MsRUFBdUQ7QUFDbkQ7QUFDQSxNQUFJQyxTQUFTLEdBQUdGLGlCQUFpQixDQUFDTCxJQUFsQixDQUF1QixXQUF2QixDQUFoQixDQUZtRCxDQUluRDs7QUFDQSxNQUFJUSxLQUFLLEdBQUdILGlCQUFpQixDQUFDTCxJQUFsQixDQUF1QixPQUF2QixDQUFaO0FBRUEsTUFBSVMsT0FBTyxHQUFHRixTQUFkLENBUG1ELENBUW5EO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFDQUUsU0FBTyxHQUFHQSxPQUFPLENBQUNDLE9BQVIsQ0FBZ0IsV0FBaEIsRUFBNkJGLEtBQTdCLENBQVYsQ0FmbUQsQ0FpQm5EOztBQUNBSCxtQkFBaUIsQ0FBQ0wsSUFBbEIsQ0FBdUIsT0FBdkIsRUFBZ0NRLEtBQUssR0FBRyxDQUF4QyxFQWxCbUQsQ0FvQm5EOztBQUNBLE1BQUlHLFVBQVUsR0FBR3RCLENBQUMsQ0FBQyxXQUFELENBQUQsQ0FBZUssTUFBZixDQUFzQmUsT0FBdEIsQ0FBakI7QUFDQUgsWUFBVSxDQUFDTSxNQUFYLENBQWtCRCxVQUFsQjtBQUNBWiwwQkFBd0IsQ0FBQ1ksVUFBRCxDQUF4QjtBQUVIOztBQUNELFNBQVNaLHdCQUFULENBQWtDYyxVQUFsQyxFQUE4QztBQUMxQyxNQUFJQyxpQkFBaUIsR0FBR3pCLENBQUMsQ0FBQyx3R0FBRCxDQUF6QjtBQUNBd0IsWUFBVSxDQUFDbkIsTUFBWCxDQUFrQm9CLGlCQUFsQjtBQUVBQSxtQkFBaUIsQ0FBQ1osRUFBbEIsQ0FBcUIsT0FBckIsRUFBOEIsVUFBU0MsQ0FBVCxFQUFZO0FBQ3RDO0FBQ0FVLGNBQVUsQ0FBQ0UsTUFBWDtBQUNILEdBSEQ7QUFJSDs7QUFFRDFCLENBQUMsQ0FBQyxZQUFZO0FBQ1ZBLEdBQUMsQ0FBQ00sUUFBRCxDQUFELENBQVlxQixRQUFaLENBQXFCLG9CQUFyQixFQUEyQyxRQUEzQyxFQUFxRCxZQUFZO0FBQzdELFFBQUlDLFNBQVMsR0FBRzVCLENBQUMsQ0FBQzZCLEtBQUssQ0FBQ0MsYUFBUCxDQUFqQjtBQUNBLFFBQUlDLFdBQVcsR0FBRy9CLENBQUMsQ0FBQzRCLFNBQVMsQ0FBQyxDQUFELENBQVQsQ0FBYUksYUFBYixDQUEyQkMsTUFBM0IsQ0FBa0MsQ0FBbEMsQ0FBRCxDQUFuQjtBQUNBakMsS0FBQyxDQUFDNEIsU0FBRCxDQUFELENBQ0twQixJQURMLENBQ1V1QixXQURWLEVBRUtHLElBRkwsQ0FFVU4sU0FBUyxDQUFDLENBQUQsQ0FBVCxDQUFhSSxhQUFiLENBQTJCRyxLQUEzQixDQUFpQyxDQUFqQyxFQUFvQ0MsSUFGOUM7QUFHSCxHQU5EO0FBT0gsQ0FSQSxDQUFELEMiLCJmaWxlIjoiYWRkcGljdHVyZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCAkID0gcmVxdWlyZSgnanF1ZXJ5Jyk7XHJcblxyXG5sZXQgJGNvbGxlY3Rpb25QaWN0dXJlcztcclxubGV0ICRhZGRQaWN0dXJlQnV0dG9uID0gJCgnPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJidG4gYnRuLW91dGxpbmUtc3VjY2VzcyBhZGRfdGFnX2xpbmtcIj5Bam91dGVyIHVuZSBpbWFnZTwvYnV0dG9uPicpO1xyXG5sZXQgJG5ld0xpbmtQaWN0dXJlTGkgPSAkKCc8bGk+PC9saT4nKS5hcHBlbmQoJGFkZFBpY3R1cmVCdXR0b24pO1xyXG5cclxuJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKSB7XHJcbiAgICAvLyBHZXQgdGhlIHVsIHRoYXQgaG9sZHMgdGhlIGNvbGxlY3Rpb24gb2YgdGFnc1xyXG4gICAgJGNvbGxlY3Rpb25QaWN0dXJlcyA9ICQoJ3VsLmltYWdlc190cmlja3MnKTtcclxuICAgIC8vIGFkZCB0aGUgXCJhZGQgYSB0YWdcIiBhbmNob3IgYW5kIGxpIHRvIHRoZSB0YWdzIHVsXHJcbiAgICAkY29sbGVjdGlvblBpY3R1cmVzLmZpbmQoJ2xpJykuZWFjaChmdW5jdGlvbigpIHtcclxuICAgICAgICBhZGRQaWN0dXJlRm9ybURlbGV0ZUxpbmsoJCh0aGlzKSk7XHJcbiAgICB9KTtcclxuICAgICRjb2xsZWN0aW9uUGljdHVyZXMuYXBwZW5kKCRuZXdMaW5rUGljdHVyZUxpKTtcclxuICAgIC8vIGNvdW50IHRoZSBjdXJyZW50IGZvcm0gaW5wdXRzIHdlIGhhdmUgKGUuZy4gMiksIHVzZSB0aGF0IGFzIHRoZSBuZXdcclxuICAgIC8vIGluZGV4IHdoZW4gaW5zZXJ0aW5nIGEgbmV3IGl0ZW0gKGUuZy4gMilcclxuICAgICRjb2xsZWN0aW9uUGljdHVyZXMuZGF0YSgnaW5kZXgnLCAkY29sbGVjdGlvblBpY3R1cmVzLmZpbmQoJzppbnB1dCcpLmxlbmd0aCk7XHJcblxyXG4gICAgJGFkZFBpY3R1cmVCdXR0b24ub24oJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xyXG4gICAgICAgIC8vIGFkZCBhIG5ldyB0YWcgZm9ybSAoc2VlIG5leHQgY29kZSBibG9jaylcclxuICAgICAgICBhZGRQaWN0dXJlRm9ybSgkY29sbGVjdGlvblBpY3R1cmVzLCAkbmV3TGlua1BpY3R1cmVMaSk7XHJcbiAgICB9KTtcclxufSk7XHJcblxyXG5mdW5jdGlvbiBhZGRQaWN0dXJlRm9ybSgkY29sbGVjdGlvbkhvbGRlciwgJG5ld0xpbmtMaSkge1xyXG4gICAgLy8gR2V0IHRoZSBkYXRhLXByb3RvdHlwZSBleHBsYWluZWQgZWFybGllclxyXG4gICAgbGV0IHByb3RvdHlwZSA9ICRjb2xsZWN0aW9uSG9sZGVyLmRhdGEoJ3Byb3RvdHlwZScpO1xyXG5cclxuICAgIC8vIGdldCB0aGUgbmV3IGluZGV4XHJcbiAgICBsZXQgaW5kZXggPSAkY29sbGVjdGlvbkhvbGRlci5kYXRhKCdpbmRleCcpO1xyXG5cclxuICAgIGxldCBuZXdGb3JtID0gcHJvdG90eXBlO1xyXG4gICAgLy8gWW91IG5lZWQgdGhpcyBvbmx5IGlmIHlvdSBkaWRuJ3Qgc2V0ICdsYWJlbCcgPT4gZmFsc2UgaW4geW91ciB0YWdzIGZpZWxkIGluIFRhc2tUeXBlXHJcbiAgICAvLyBSZXBsYWNlICdfX25hbWVfX2xhYmVsX18nIGluIHRoZSBwcm90b3R5cGUncyBIVE1MIHRvXHJcbiAgICAvLyBpbnN0ZWFkIGJlIGEgbnVtYmVyIGJhc2VkIG9uIGhvdyBtYW55IGl0ZW1zIHdlIGhhdmVcclxuICAgIC8vIG5ld0Zvcm0gPSBuZXdGb3JtLnJlcGxhY2UoL19fbmFtZV9fbGFiZWxfXy9nLCBpbmRleCk7XHJcblxyXG4gICAgLy8gUmVwbGFjZSAnX19uYW1lX18nIGluIHRoZSBwcm90b3R5cGUncyBIVE1MIHRvXHJcbiAgICAvLyBpbnN0ZWFkIGJlIGEgbnVtYmVyIGJhc2VkIG9uIGhvdyBtYW55IGl0ZW1zIHdlIGhhdmVcclxuICAgIG5ld0Zvcm0gPSBuZXdGb3JtLnJlcGxhY2UoL19fbmFtZV9fL2csIGluZGV4KTtcclxuXHJcbiAgICAvLyBpbmNyZWFzZSB0aGUgaW5kZXggd2l0aCBvbmUgZm9yIHRoZSBuZXh0IGl0ZW1cclxuICAgICRjb2xsZWN0aW9uSG9sZGVyLmRhdGEoJ2luZGV4JywgaW5kZXggKyAxKTtcclxuXHJcbiAgICAvLyBEaXNwbGF5IHRoZSBmb3JtIGluIHRoZSBwYWdlIGluIGFuIGxpLCBiZWZvcmUgdGhlIFwiQWRkIGEgdGFnXCIgbGluayBsaVxyXG4gICAgdmFyICRuZXdGb3JtTGkgPSAkKCc8bGk+PC9saT4nKS5hcHBlbmQobmV3Rm9ybSk7XHJcbiAgICAkbmV3TGlua0xpLmJlZm9yZSgkbmV3Rm9ybUxpKTtcclxuICAgIGFkZFBpY3R1cmVGb3JtRGVsZXRlTGluaygkbmV3Rm9ybUxpKTtcclxuXHJcbn1cclxuZnVuY3Rpb24gYWRkUGljdHVyZUZvcm1EZWxldGVMaW5rKCR0YWdGb3JtTGkpIHtcclxuICAgIHZhciAkcmVtb3ZlRm9ybUJ1dHRvbiA9ICQoJzxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwiYnRuIGJ0bi1kYW5nZXJcIiBzdHlsZT1cIm1hcmdpbi1ib3R0b206IDVweFwiPlN1cHByaW1lciBjZXQgw6lsw6ltZW50PC9idXR0b24+Jyk7XHJcbiAgICAkdGFnRm9ybUxpLmFwcGVuZCgkcmVtb3ZlRm9ybUJ1dHRvbik7XHJcblxyXG4gICAgJHJlbW92ZUZvcm1CdXR0b24ub24oJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xyXG4gICAgICAgIC8vIHJlbW92ZSB0aGUgbGkgZm9yIHRoZSB0YWcgZm9ybVxyXG4gICAgICAgICR0YWdGb3JtTGkucmVtb3ZlKCk7XHJcbiAgICB9KTtcclxufVxyXG5cclxuJChmdW5jdGlvbiAoKSB7XHJcbiAgICAkKGRvY3VtZW50KS5kZWxlZ2F0ZSgnLmN1c3RvbS1maWxlLWlucHV0JywgJ2NoYW5nZScsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBsZXQgaW5wdXRGaWxlID0gJChldmVudC5jdXJyZW50VGFyZ2V0KTtcclxuICAgICAgICBsZXQgbGFiZWxUb1Nob3cgPSAkKGlucHV0RmlsZVswXS5hY3RpdmVFbGVtZW50LmxhYmVsc1sxXSk7XHJcbiAgICAgICAgJChpbnB1dEZpbGUpXHJcbiAgICAgICAgICAgIC5maW5kKGxhYmVsVG9TaG93KVxyXG4gICAgICAgICAgICAuaHRtbChpbnB1dEZpbGVbMF0uYWN0aXZlRWxlbWVudC5maWxlc1swXS5uYW1lKTtcclxuICAgIH0pO1xyXG59KTsiXSwic291cmNlUm9vdCI6IiJ9